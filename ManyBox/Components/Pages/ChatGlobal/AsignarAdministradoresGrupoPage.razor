@page "/asignar-admins/{ConversacionId:int}"
@using ManyBox.Models.Custom
@inject ManyBox.Services.ChatApiService ChatService
@inject NavigationManager Navigation

<div class="main-bg">
    <div class="agregar-participantes-center-card">
        <h2>Asignar administradores</h2>
        @if (!esCreador)
        {
            <div style="color: #e74c3c; font-size: 1.1em; margin-bottom: 18px;">Solo el creador del grupo puede asignar administradores.</div>
            <button class="mb-btn-primary mb-btn-gradient" @onclick="VolverAlChat">Volver al chat</button>
        }
        else
        {
            <div style="max-height: 260px; overflow-y: auto; margin-top: 8px;">
                @foreach (var participante in participantes)
                {
                    <div class="miembro-item" style="display: flex; align-items: center; gap: 8px; margin-bottom: 6px;">
                        <span style="font-weight: 500;">@participante.Nombre @participante.Apellido</span>
                        <span style="color:#aaa; font-size:0.95em;">(@participante.SucursalNombre)</span>
                        @if (participante.Id == creadorId)
                        {
                            <span style="margin-left:auto;color:#7ec4fa;font-weight:bold;">Creador</span>
                            <input type="checkbox" checked disabled style="margin-left:8px;" />
                        }
                        else
                        {
                            <input type="checkbox" style="margin-left:auto;" @bind="participante.EsAdmin" />
                        }
                    </div>
                }
            </div>
            <div class="modal-actions" style="display: flex; justify-content: flex-end; gap: 12px; margin-top: 12px;">
                <button class="btn btn-secondary" @onclick="VolverAlChat" style="border-radius: 8px;">Cancelar</button>
                <button class="mb-btn-primary mb-btn-gradient" @onclick="GuardarCambios" style="border-radius: 8px;">Guardar</button>
            </div>
            @if (showValidationError)
            {
                <div style="color: #e74c3c; font-size: 0.95em;">Ocurrió un error al guardar los cambios.</div>
            }
        }
    </div>
</div>

@code {
    [Parameter] public int ConversacionId { get; set; }
    private List<ParticipanteAdminVM> participantes = new();
    private bool esCreador = false;
    private int creadorId;
    private bool showValidationError = false;

    protected override async Task OnInitializedAsync()
    {
        await CargarParticipantes();
    }

    private async Task CargarParticipantes()
    {
        var convs = await ChatService.GetMisConversacionesAsync();
        var conv = convs.FirstOrDefault(c => c.Id == ConversacionId);
        if (conv != null && conv.Participantes != null)
        {
            // Obtener el id del creador desde la API (no asumir que es el primer participante)
            var creadorIdApi = await ChatService.GetCreadorIdEnConversacionAsync(ConversacionId);
            creadorId = creadorIdApi;
            esCreador = Microsoft.Maui.Storage.Preferences.Default.Get("idUsuario", 0) == creadorId;
            var adminIds = await ChatService.GetAdminIdsEnConversacionAsync(ConversacionId);
            participantes = conv.Participantes.Select(p => new ParticipanteAdminVM
            {
                Id = p.Id,
                Nombre = p.Nombre,
                Apellido = p.Apellido,
                SucursalNombre = p.SucursalNombre,
                EsAdmin = adminIds.Contains(p.Id)
            }).ToList();
        }
    }

    private async Task GuardarCambios()
    {
        showValidationError = false;
        var adminIds = participantes.Where(p => p.EsAdmin || p.Id == creadorId).Select(p => p.Id).Distinct().ToList();
        var res = await ChatService.AsignarAdministradoresGrupoAsync(ConversacionId, adminIds);
        if (res)
        {
            Navigation.NavigateTo($"/chat/{ConversacionId}");
        }
        else
        {
            showValidationError = true;
        }
    }
    private void VolverAlChat()
    {
        Navigation.NavigateTo($"/chat/{ConversacionId}");
    }

    private class ParticipanteAdminVM
    {
        public int Id { get; set; }
        public string Nombre { get; set; }
        public string Apellido { get; set; }
        public string SucursalNombre { get; set; }
        public bool EsAdmin { get; set; }
    }
}
