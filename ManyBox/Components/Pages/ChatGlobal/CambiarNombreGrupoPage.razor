@page "/cambiar-nombre-grupo/{ConversacionId:int}"
@inject ManyBox.Services.ChatApiService ChatService
@inject NavigationManager Navigation

<div class="main-bg">
    <div class="agregar-participantes-center-card">
        <h2>Cambiar nombre del grupo</h2>
        @if (!esCreador)
        {
            <div style="color: #e74c3c; font-size: 1.1em; margin-bottom: 18px;">Solo el creador del grupo puede cambiar el nombre.</div>
            <button class="mb-btn-primary mb-btn-gradient" @onclick="VolverAlChat">Volver al chat</button>
        }
        else
        {
            <div style="margin-bottom: 16px;">
                <label>Nuevo nombre:</label>
                <input class="form-control" style="border-radius:8px;" @bind="nuevoNombre" maxlength="50" />
            </div>
            <div class="modal-actions" style="display: flex; justify-content: flex-end; gap: 12px; margin-top: 12px;">
                <button class="btn btn-secondary" @onclick="VolverAlChat" style="border-radius: 8px;">Cancelar</button>
                <button class="mb-btn-primary mb-btn-gradient" @onclick="GuardarCambios" style="border-radius: 8px;">Guardar</button>
            </div>
            @if (showValidationError)
            {
                <div style="color: #e74c3c; font-size: 0.95em;">@validationMessage</div>
            }
        }
    </div>
</div>

@code {
    [Parameter] public int ConversacionId { get; set; }
    private string nuevoNombre = string.Empty;
    private bool esCreador = false;
    private string validationMessage = "";
    private bool showValidationError = false;

    protected override async Task OnInitializedAsync()
    {
        var convs = await ChatService.GetMisConversacionesAsync();
        var conv = convs.FirstOrDefault(c => c.Id == ConversacionId);
        if (conv != null)
        {
            nuevoNombre = conv.Nombre ?? string.Empty;
            var creadorId = await ChatService.GetCreadorIdEnConversacionAsync(ConversacionId);
            esCreador = Microsoft.Maui.Storage.Preferences.Default.Get("idUsuario", 0) == creadorId;
        }
    }

    private async Task GuardarCambios()
    {
        showValidationError = false;
        validationMessage = "";
        if (string.IsNullOrWhiteSpace(nuevoNombre))
        {
            showValidationError = true;
            validationMessage = "El nombre no puede estar vacío.";
            return;
        }
        var res = await ChatService.CambiarNombreGrupoAsync(ConversacionId, nuevoNombre);
        if (res)
        {
            Navigation.NavigateTo($"/chat/{ConversacionId}");
        }
        else
        {
            showValidationError = true;
            validationMessage = "No se pudo cambiar el nombre.";
        }
    }
    private void VolverAlChat()
    {
        Navigation.NavigateTo($"/chat/{ConversacionId}");
    }
}
