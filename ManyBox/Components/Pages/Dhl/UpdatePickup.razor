@page "/dhl/update-pickup/{DispatchConfirmationNumber}"
@using ManyBox.Models.Dhl
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http

@if (OperatingSystem.IsWindows())
{
<div class="main-content">
    <div class="page-header">
        <h1 class="page-title">DHL - Actualizar Recogida</h1>
        <p class="page-subtitle">Actualiza una recogida de DHL.</p>
    </div>

    <div class="card">
        <div class="card-body">
            <EditForm Model="@updatePickupRequest" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Número de Cuenta del Remitente Original</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.OriginalShipperAccountNumber" />
                        </div>
                        <div class="form-group">
                            <label>Fecha de Recogida</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.PickupDate" placeholder="YYYY-MM-DD" />
                        </div>
                        <div class="form-group">
                            <label>Hora de Cierre</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.CloseTime" placeholder="HH:MM" />
                        </div>
                        <div class="form-group">
                            <label>Ubicación</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.Location" />
                        </div>
                        <div class="form-group">
                            <label>Tipo de Ubicación</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.LocationType" />
                        </div>
                        <div class="form-group">
                            <label>Observación</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.Remark" />
                        </div>

                        <h5>Cuentas</h5>
                        @for (int i = 0; i < updatePickupRequest.Accounts.Count; i++)
                        {
                            var account = updatePickupRequest.Accounts[i];
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Código de Tipo</label>
                                        <InputText class="form-control" @bind-Value="account.TypeCode" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Número</label>
                                        <InputText class="form-control" @bind-Value="account.Number" />
                                    </div>
                                </div>
                            </div>
                        }
                        <button type="button" class="btn btn-secondary" @onclick="AddAccount">Agregar Cuenta</button>

                        <h5 class="mt-3">Instrucciones Especiales</h5>
                        @for (int i = 0; i < updatePickupRequest.SpecialInstructions.Count; i++)
                        {
                            var instruction = updatePickupRequest.SpecialInstructions[i];
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Valor</label>
                                        <InputText class="form-control" @bind-Value="instruction.Value" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Código de Tipo</label>
                                        <InputText class="form-control" @bind-Value="instruction.TypeCode" />
                                    </div>
                                </div>
                            </div>
                        }
                        <button type="button" class="btn btn-secondary" @onclick="AddSpecialInstruction">Agregar Instrucción</button>
                    </div>
                    <div class="col-md-6">
                        <h5>Detalles del Cliente</h5>
                        <div class="form-group">
                            <label>Nombre Completo Remitente</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.CustomerDetails.ShipperDetails.ContactInformation.FullName" />
                        </div>
                        <div class="form-group">
                            <label>Teléfono Remitente</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.CustomerDetails.ShipperDetails.ContactInformation.Phone" />
                        </div>
                        <div class="form-group">
                            <label>Empresa/Persona Remitente</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.CustomerDetails.ShipperDetails.ContactInformation.CompanyName" />
                        </div>
                        <div class="form-group">
                            <label>Dirección Remitente</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.CustomerDetails.ShipperDetails.PostalAddress.AddressLine1" />
                        </div>
                        <div class="form-group">
                            <label>Ciudad Remitente</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.CustomerDetails.ShipperDetails.PostalAddress.CityName" />
                        </div>
                        <div class="form-group">
                            <label>Código Postal Remitente</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.CustomerDetails.ShipperDetails.PostalAddress.PostalCode" />
                        </div>
                        <div class="form-group">
                            <label>Código de País Remitente</label>
                            <InputText class="form-control" @bind-Value="updatePickupRequest.CustomerDetails.ShipperDetails.PostalAddress.CountryCode" />
                        </div>
                    </div>
                </div>

                <h5 class="mt-3">Detalles del Envío</h5>
                @if(updatePickupRequest.ShipmentDetails != null)
                {
                    @for (int i = 0; i < updatePickupRequest.ShipmentDetails.Count; i++)
                    {
                        var shipmentDetail = updatePickupRequest.ShipmentDetails[i];
                        // Form for ShipmentDetail properties
                    }
                }
                <button type="button" class="btn btn-secondary" @onclick="AddShipmentDetail">Agregar Detalle de Envío</button>

                <div class="mt-3">
                    <button type="submit" class="btn btn-primary">Actualizar Recogida</button>
                </div>
            </EditForm>
        </div>
    </div>

    @if (apiResponse != null)
    {
        <div class="card mt-4">
            <div class="card-header">
                <h3 class="card-title">Respuesta de la API</h3>
            </div>
            <div class="card-body">
                <pre>@apiResponse</pre>
            </div>
        </div>
    }
</div>
}
@code {
    [Parameter]
    public string DispatchConfirmationNumber { get; set; }

    private DhlUpdatePickupRequest updatePickupRequest = new DhlUpdatePickupRequest
    {
        Accounts = new List<Account>(),
        SpecialInstructions = new List<SpecialInstruction>(),
        CustomerDetails = new CustomerDetails
        {
            ShipperDetails = new PartyDetails
            {
                PostalAddress = new Address(),
                ContactInformation = new Contact()
            }
        },
        ShipmentDetails = new List<ShipmentDetail>()
    };

    private string apiResponse;

    protected override void OnInitialized()
    {
        updatePickupRequest.DispatchConfirmationNumber = DispatchConfirmationNumber;
        updatePickupRequest.Accounts.Add(new Account());
        updatePickupRequest.SpecialInstructions.Add(new SpecialInstruction());
        updatePickupRequest.ShipmentDetails.Add(new ShipmentDetail { Packages = new List<Package>() });
    }

    private void AddAccount()
    {
        updatePickupRequest.Accounts.Add(new Account());
    }

    private void AddSpecialInstruction()
    {
        updatePickupRequest.SpecialInstructions.Add(new SpecialInstruction());
    }

    private void AddShipmentDetail()
    {
        updatePickupRequest.ShipmentDetails.Add(new ShipmentDetail { Packages = new List<Package>() });
    }

    private async Task HandleValidSubmit()
    {
        // Validaciones mínimas para evitar campos vacíos
        if (updatePickupRequest.Accounts.Count == 0)
            updatePickupRequest.Accounts.Add(new Account { TypeCode = "shipper", Number = updatePickupRequest.OriginalShipperAccountNumber });
        if (string.IsNullOrWhiteSpace(updatePickupRequest.CustomerDetails.ShipperDetails.ContactInformation.CompanyName))
            updatePickupRequest.CustomerDetails.ShipperDetails.ContactInformation.CompanyName = updatePickupRequest.CustomerDetails.ShipperDetails.ContactInformation.FullName;
        try
        {
            var response = await Http.PatchAsJsonAsync($"http://100.64.197.11:5000/api/dhl/pickups/{DispatchConfirmationNumber}", updatePickupRequest);
            apiResponse = await response.Content.ReadAsStringAsync();
        }
        catch (Exception ex)
        {
            apiResponse = $"Error: {ex.Message}";
        }
    }
}
