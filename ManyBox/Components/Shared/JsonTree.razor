@using System.Text.Json
@namespace ManyBox.Components.Shared

@if (Element.ValueKind == JsonValueKind.Object)
{
    <div class="jt jt-obj">
        <details open="@(!Collapsed)">
            <summary>{ ... } objeto (@Element.EnumerateObject().Count())</summary>
            <div class="jt-children">
                @foreach (var prop in Element.EnumerateObject())
                {
                    <div class="jt-row">
                        <span class="jt-key">@prop.Name</span>
                        <JsonTree Element="@prop.Value" />
                    </div>
                }
            </div>
        </details>
    </div>
}
else if (Element.ValueKind == JsonValueKind.Array)
{
    <div class="jt jt-arr">
        <details open="@(!Collapsed)">
            <summary>[ ... ] arreglo (@Element.GetArrayLength())</summary>
            <div class="jt-children">
                @for (var i = 0; i < Element.GetArrayLength(); i++)
                {
                    var v = Element[i];
                    <div class="jt-row">
                        <span class="jt-idx">@i</span>
                        <JsonTree Element="@v" />
                    </div>
                }
            </div>
        </details>
    </div>
}
else
{
    <span class="jt-prim @GetKindCss(Element.ValueKind)">@GetPrimitive(Element)</span>
}

@code {
    [Parameter] public JsonElement Element { get; set; }
    [Parameter] public bool Collapsed { get; set; }

    private string GetPrimitive(JsonElement e)
    {
        return e.ValueKind switch
        {
            JsonValueKind.String => e.GetString(),
            JsonValueKind.Number => e.ToString(),
            JsonValueKind.True => "true",
            JsonValueKind.False => "false",
            JsonValueKind.Null => "null",
            _ => e.ToString()
        } ?? string.Empty;
    }

    private string GetKindCss(JsonValueKind k) => k switch
    {
        JsonValueKind.String => "jt-string",
        JsonValueKind.Number => "jt-number",
        JsonValueKind.True or JsonValueKind.False => "jt-bool",
        JsonValueKind.Null => "jt-null",
        _ => ""
    };
}
