@* ContactList.razor *@
@using Microsoft.AspNetCore.Components

@if (EsSuperAdmin && Sucursales?.Any() == true)
{
    <div class="contact-list">
        <h5>Selecciona una sucursal:</h5>
        <select class="form-select mb-2" @onchange="OnSucursalChanged">
            <option value="">-- Todas --</option>
            @foreach (var suc in Sucursales)
            {
                <option value="@suc" selected="@(suc == SucursalSeleccionada)">@suc</option>
            }
        </select>
    </div>
}
<div class="contact-list">
    <h5>Selecciona un contacto para chatear:</h5>
    <ul>
        @foreach (var contacto in ContactosFiltrados)
        {
            <li class="contact-item" @onclick="() => OnSelectContact.InvokeAsync(contacto)">
                <span class="avatar">@contacto.Nombre.Substring(0,1).ToUpper()</span>
                <span>@contacto.Nombre</span>
                @if (!string.IsNullOrWhiteSpace(contacto.Sucursal))
                {
                    <span style="font-size:0.9em;color:#888;margin-left:8px;">@contacto.Sucursal</span>
                }
            </li>
        }
    </ul>
</div>

@code {
    [Parameter] public List<Empleado> Contactos { get; set; } = new();
    [Parameter] public EventCallback<Empleado> OnSelectContact { get; set; }
    [Parameter] public bool EsSuperAdmin { get; set; } = false;
    [Parameter] public List<string>? Sucursales { get; set; }

    private string? SucursalSeleccionada;

    private IEnumerable<Empleado> ContactosFiltrados =>
        string.IsNullOrWhiteSpace(SucursalSeleccionada)
            ? Contactos
            : Contactos.Where(c => c.Sucursal == SucursalSeleccionada);

    private void OnSucursalChanged(ChangeEventArgs e)
    {
        SucursalSeleccionada = e.Value?.ToString();
    }

    public class Empleado
    {
        public string Nombre { get; set; } = string.Empty;
        public bool Activo { get; set; }
        public string Sucursal { get; set; } = string.Empty;
    }
}
